// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageServiceLibrary.Model;

namespace StorageServiceLibrary.Migrations
{
    [DbContext(typeof(App_Data_Base))]
    [Migration("20220810072006_Inicialna")]
    partial class Inicialna
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StorageServiceLibrary.Model.Dobavljac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dobavljaci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "Ime ulice BB",
                            BrojTelefona = "827352",
                            Naziv = "ACME"
                        },
                        new
                        {
                            Id = 2,
                            Adresa = "Ime ulice BB",
                            BrojTelefona = "827352",
                            Naziv = "GIGATRON"
                        });
                });

            modelBuilder.Entity("StorageServiceLibrary.Model.Kategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorije");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "MONITOR"
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "KUCISTE"
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "LAPTOP"
                        });
                });

            modelBuilder.Entity("StorageServiceLibrary.Model.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Id_Dobavljac")
                        .HasColumnType("int");

                    b.Property<int>("Id_Proizvodjac")
                        .HasColumnType("int");

                    b.Property<int>("Id_kategorija")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Dobavljac");

                    b.HasIndex("Id_Proizvodjac");

                    b.HasIndex("Id_kategorija");

                    b.ToTable("Proizvodi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cena = 21999m,
                            Id_Dobavljac = 2,
                            Id_Proizvodjac = 1,
                            Id_kategorija = 1,
                            Naziv = "DELL Monitor 24",
                            Opis = "EAN:5397184409336 <br/> Dijagonala:23.8'' <br/>Tip panela:IPS <br/>Rezolucija:1920 x 1080 Full HD <br/>Vreme odziva:4ms <br/>Odnos stranica:16 : 9 <br/>Osvežavanje:75Hz ..."
                        },
                        new
                        {
                            Id = 2,
                            Cena = 20999m,
                            Id_Dobavljac = 2,
                            Id_Proizvodjac = 2,
                            Id_kategorija = 2,
                            Naziv = "ASUS Kućište ROG Z11",
                            Opis = "EAN:4718017759526 <br/>Tip:Mini Tower <br/>Kompatibilnost:Mini-ITX, Mini-DTX <br/>Napajanje:Bez napajanja <br/>Boja:Crna"
                        },
                        new
                        {
                            Id = 3,
                            Cena = 159999m,
                            Id_Dobavljac = 1,
                            Id_Proizvodjac = 1,
                            Id_kategorija = 3,
                            Naziv = "DELL Vostro5625 - NOT19638",
                            Opis = "EAN:5290322196382 <br/>Model procesora:AMD Ryzen 7 5825U do 4.5GHz  <br/>Dijagonala ekrana:16''  <br/>Tip grafičke karte:Integrisana Radeon™ RX Vega 8  <br/>RAM (memorija):16GB  <br/>HDD SSD:512GB SSD"
                        });
                });

            modelBuilder.Entity("StorageServiceLibrary.Model.Proizvodjac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proizvodjaci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresa = "Ime ulice BB",
                            BrojTelefona = "123456789",
                            Naziv = "DELL"
                        },
                        new
                        {
                            Id = 2,
                            Adresa = "Ime ulice BB",
                            BrojTelefona = "123456789",
                            Naziv = "ASUS"
                        });
                });

            modelBuilder.Entity("StorageServiceLibrary.Model.Proizvod", b =>
                {
                    b.HasOne("StorageServiceLibrary.Model.Dobavljac", "Dobavljac")
                        .WithMany()
                        .HasForeignKey("Id_Dobavljac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageServiceLibrary.Model.Proizvodjac", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("Id_Proizvodjac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StorageServiceLibrary.Model.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("Id_kategorija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dobavljac");

                    b.Navigation("Kategorija");

                    b.Navigation("Proizvodjac");
                });
#pragma warning restore 612, 618
        }
    }
}
